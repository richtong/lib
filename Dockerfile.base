# https://docs.docker.com/compose/gettingstarted/
# syntax=docker/dockerfile:1
FROM ubuntu:22.04
# Note that the passed in argument NAME is the name of the application
LABEL maintainer="Rich Tong (rich@tongfamily.com)"

# https://docs.docker.com/engine/reference/builder/#arg
# the default user name is user which is the Jenkins default used by PX34
ARG USER=user
ARG GROUP=staff
# these are the MacOS defaults so you should override to 1000:1000 for Linux
ARG UID=501
ARG GID=20
ARG COMMAND=bash
ENV DEBIAN_FRONTEND=noninteractive
# https://medium.com/fundbox-engineering/overview-d3759e83969c
# if you say NO then you get regular notebook
# for demo purposes expose jupyter notebook
EXPOSE 8888
# sshd
# EXPOSE 22

# Use bash
SHELL ["/bin/bash", "-c"]

USER root

# Need vim for debugging and ssh as well
# https://spin.atomicobject.com/2015/09/25/debug-node-js/
# The jupyter notebooks delete the apt list
RUN mkdir -p /var/lib/apt/list && \
    apt-get update -y && \
    apt-get install -y --no-install-recommends \
        vim=2:8.1.2269-1ubuntu5 \
        curl=7.68.0-1ubuntu2 \
        sudo=1.8.31-1ubuntu1 \
        git-lfs=2.9.2-1 \
        openssh-server=1:8.2p1-4ubuntu0.2 \
    && rm -rf /var/lib/apt/lists/*


# keep this as reference in case any are needed
#RUN pip install --quiet --no-cache-dir \
#        'ipywidgets>=7.5' \
#        jupyterlab_widgets \
#        jupyter_bokeh \
#        jupyter-dash


# -m create a home directory
# -u set the User ID number
# -g set the Group ID number
# -s set the shell
# https://www.atlantic.net/vps-hosting/how-to-setup-passwordless-sudo-for-a-specific-user/
#RUN groupadd -g $GID $GROUP && \
# Assumes the PX4 base has create user so add SUDO to it
RUN if ! id "$USER"; then useradd -l -g "$GID" -u "$UID" -m "$USER"; fi && \
    usermod -aG sudo "$USER" && \
    usermod -g "$GID" "$USER" && \
    usermod -u "$UID" "$USER" && \
    echo "$USER ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers

USER $USER
WORKDIR /home/$USER

# For Deepnote, it needs to have git lfs installed for repo connection
# And also graphviz the pip install does not actually include
# the system level facilities https://askubuntu.com/questions/97552/how-to-install-dot-provided-by-graphviz
# Also for the ip filings get mermaid and graphviz
RUN pip install --quiet --no-cache-dir \
        pre-commit==2.19.0

# install the pip and other dependencies not in the base image
# Now install the remaining tools
RUN git clone --recursive https://github.com/px4/px4-autopilot && \
    ./px4-autopilot/Tools/setup/ubuntu.sh

# https://docs.qgroundcontrol.com/master/en/releases/daily_builds.html
# Latest build of QGrouncControl
WORKDIR /home/$USER/bin
RUN curl https://s3-us-west-2.amazonaws.com/qgroundcontrol/builds/master/QGroundControl.AppImage

# These can be overridden at docker run time
# Entrypoint is always run even when you have command line argument
# overriding only with the --entrypoint flag so use this when
# you have a daemon that needs to run like a jupyterlab server
# https://www.ctl.io/developers/blog/post/dockerfile-entrypoint-vs-cmd/
# ENTRYPOINT jupyterlab
# this means that if docker run specified and there is no command run this
CMD [ "${COMMAND}" ]
